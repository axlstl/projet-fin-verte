import streamlit as st
import pandas as pd
import plotly.graph_objects as go

# Importer les fonctions de configuration
from streamlit_config import (
    load_data, create_portfolios, analyze_portfolios, 
    show_portfolio_details, create_comparison_chart
)

#param√®tres de l'application (nom de l'onglet et titre du projet)
st.set_page_config(
    page_title="Projet Finance Verte",
    page_icon="üìä",
    layout="wide",
    initial_sidebar_state="expanded"
)
st.title("Projet Finance Verte - Pr√©sentation de 3 portefeuilles ESG")


with st.spinner('Chargement des donn√©es - Projet r√©alis√© par Tristan Voirin, Axel Sottile et c√©line Nevo.'):
    tickers, df_esg, df_returns = load_data()
    portfolios_data, portfolios_to_analyze = create_portfolios(df_esg)
    metrics = analyze_portfolios(portfolios_to_analyze).rename_axis("Portefeuille")

# on initie l'ensemble des onglets de l'interface
tab_overview, tab_env, tab_social, tab_esg = st.tabs([
    "üìã Pr√©sentation du projet", 
    "üåø Portefeuille Environnement", 
    "üë™ Portefeuille Social", 
    "üåê Portefeuille ESG"
])

#1er onglet : 
with tab_overview:
    st.header("Pr√©sentation des portefeuilles ")
    st.write("""
    Cette application pr√©sente le r√©sultat du projet de la mati√®re √âconomie de l'√©nergie et de l'environnement dirig√© par J√©r√©my Dudek. Ce projet a √©t√© r√©alis√© par C√©line Nevo, Axel Sottile et Tristan Voirin. Nous avons eu comme id√©e de cr√©er trois portefeuilles se basant sur des crit√®res extra-financiers. L'ensemble des donn√©es relatives aux performances ESG ont √©t√© r√©cup√©r√©es gr√¢ce √† la librairie Yahoo Finance.
    \n
    Les performances des portefeuilles ont √©t√© calcul√©es sur deux p√©riodes : 
    - **Une p√©riode de backtest** : de 2015 au 1er avril 2025
    - **Une p√©riode de test en direct** : du 1er avril 2025 √† aujourd'hui. Cela permet de mesurer les performances du portefeuille depuis sa date d'investissement.
    \n
    Afin de construire ces portefeuilles, nous avons suivi une approche Best-in-Class √† partir de 80 entreprises du S\&P 500, c'est-√†-dire que nous avons s√©lectionn√© les entreprises qui performent le mieux dans la th√©matique correspondante par rapport √† la moyenne des entreprises du m√™me secteur. Par ailleurs, toutes les entreprises qui effectuent des tests sur les animaux ont √©t√© exclues de la s√©lection. Enfin, le portefeuille ESG combine les trois scores (Environnement, Social et Gouvernance) et inclut √©galement un indicateur refl√©tant le positionnement ESG des entreprises par rapports √† ses concurrents, en combinant les performances ESG actuelles avec les signaux d'engagement des entreprises. 
    \n
    Les performances du portefeuille Social sont accentu√©es car elles contiennent des parts de l'entreprise NVIDIA qui a connu une √©norme croissances ces derni√®res ann√©es. Par ailleurs, les performances de l'investissement en direct sont relativement faibles √† court terme car elles subissent le choc li√© √† l'incertitude autour de l'inflation et de la mise en place des droits de douanes par les √âtats-Unis.
    \n
    Le programme calcule et stocke les rebalancements du portefeuille en fonction des √©volutions des scores extra-financiers. Nous n'affichons sur streamlit que la derni√®re version des allocations du portefeuille. Toutefois, le calcul des performances int√®gre ces changements.
    """)
    
    #On affiche les performances globales (√©volution des rendements et des m√©triques cl√©s)
    st.subheader("Comparaison des performances des portefeuilles")
    fig_comparison = create_comparison_chart(portfolios_data, df_returns)
    st.plotly_chart(fig_comparison, use_container_width=True)
    


    #Ici, on s'occupe de s√©lectionner les metrics importantes par rapport √† la classe d'analyse de portefeuille
    st.subheader("Comparaison des m√©triques cl√©s")    
    key_metrics = [
        'Rendement Total (%)_Backtest', 
        'Rendement Annualis√© (%)_Backtest',
        'Ratio de Sharpe_Backtest', 
        'Drawdown Max (%)_Backtest',
        'Rendement Total (%)_Live',
        'Ratio de Sharpe_Live']
    
    #j'ai refait un tableau parce que c'√©tiat plus simple que de remodifier la classe
    selected_metrics = metrics[key_metrics].copy()
    selected_metrics.columns = [
        'Rendement Total (%) (Backtest)', 
        'Rendement Annualis√© (%) (Backtest)',
        'Ratio de Sharpe (Backtest)', 
        'Drawdown Max (%) (Backtest)',
        'Rendement Total (%) (Direct)',
        'Ratio de Sharpe (Direct)']
    st.table(selected_metrics.round(2))
        
    
#mise en place des trois onglets
with tab_env:
    show_portfolio_details("Environnement", portfolios_data["Environnement"], df_esg, df_returns, metrics)
with tab_social:
    show_portfolio_details("Social", portfolios_data["Social"], df_esg, df_returns, metrics)
with tab_esg:
    show_portfolio_details("ESG", portfolios_data["ESG"], df_esg, df_returns, metrics)

#pied de page
st.markdown("---")
st.caption("Projet de comparaison de portefeuilles pour la mati√®re √âconomie de l'√©nergie et de l'environnement - R√©alis√© par Axel Sottile, C√©line Nevo et Tristan Voirin")